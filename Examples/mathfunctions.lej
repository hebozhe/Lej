def fun fib as:
    take nat n;
    expect nat;
    if n < 2:
        give n;
        \
    give fib[n - 2] + fib[n - 1];

def fun factorial as:
    take nat n;
    expect nat;
    if n < 2:
        give 1;
        \
    give n * factorial[n - 1];

def fun smallestPowerOfTwo as:
    take nat n;
    expect nat;
    def nat power as 1;
    def nat exponent as 0;
    do this until power > n - 1:
        power as power * 2;
        exponent as exponent + 1;
        \
    give power;
