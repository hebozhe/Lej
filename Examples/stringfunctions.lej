def fun reverseStr as this:
    take str s;
    expect str;
    def str reversed as "";
    def sLen as what len with [s] gives;
    def chr c as '';
    def nat i as sLen - 1;
    do this sLen times:
        redef c as s[i];
        reversed = reversed + c;
        redef i as i - 1;
        \
    give reversed;

def fun isPalindrome as this:
    take str s;
    expect brou;
    def str reversed as what reverseStr with [s] gives;
    if s = reversed:
        give T;
        \
    give F;


def fun ratToDecString as this:
    take rat r;
    expect str;
    def int n as r["num"];
    def int d as r["den"];
    def int q as [n - [n % d]] / d;
    def int r as n % d;
    def str dec as q as str;
    if r = 0:
        give dec;
        \
    redef dec as dec + ".";
    do this until r = 0:
        redef n as r * 10;
        redef q as [n - [n % d]] / d;
        redef r as n % d;
        redef dec as dec + [q as str];
        \
    give dec;
